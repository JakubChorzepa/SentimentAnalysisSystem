version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9093"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - kafka-network

  kafka-create-topic:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
      sleep 15;
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists
      --topic reddit-mental-health-posts
      --partitions 3
      --replication-factor 1"
    networks:
      - kafka-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: reddit_user
      POSTGRES_PASSWORD: reddit_pass
      POSTGRES_DB: reddit_db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5440:5432
    networks:
      - kafka-network

  reddit-producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    volumes:
      - ./.env:/app/.env
    environment:
      - DOCKER_ENV=true
    depends_on:
      - kafka
      - kafka-create-topic
    networks:
      - kafka-network

  reddit-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    volumes:
      - ./.env:/app/.env
    environment:
      - DOCKER_ENV=true
    depends_on:
      - kafka
      - postgres
      - kafka-create-topic
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge